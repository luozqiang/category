<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.model.Category" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="path_name" property="pathName" jdbcType="VARCHAR" />
    <result column="is_leaf" property="isLeaf" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, parent_id, name, sort_order, level, path, path_name, is_leaf, status, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <update id="updateCategoryRemoveOne" >
    update category set path = concat(path, id, '/')  where level in (2,3,4)
  </update>
  
  
  <select id="selectCategoryInfo" resultMap="BaseResultMap" parameterType="com.model.Category" >
    select 
    <include refid="Base_Column_List" />
    from category
    <where>
        <if test="parentId!=null" >
            and parent_id=#{parentId,jdbcType=INTEGER}
        </if>
        <if test="name!=null" >
            and name=#{name,jdbcType=VARCHAR}
        </if>      
    </where>
    limit 1
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Category" >
    insert into category (id, parent_id, name, 
      sort_order, level, path, 
      path_name, is_leaf, status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sortOrder,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, #{path,jdbcType=VARCHAR}, 
      #{pathName,jdbcType=VARCHAR}, #{isLeaf,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Category" keyProperty="id" useGeneratedKeys="true" >
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="pathName != null" >
        path_name,
      </if>
      <if test="isLeaf != null" >
        is_leaf,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="pathName != null" >
        #{pathName,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null" >
        #{isLeaf,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Category" >
    update category
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="pathName != null" >
        path_name = #{pathName,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null" >
        is_leaf = #{isLeaf,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Category" >
    update category
    set parent_id = #{parentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      level = #{level,jdbcType=TINYINT},
      path = #{path,jdbcType=VARCHAR},
      path_name = #{pathName,jdbcType=VARCHAR},
      is_leaf = #{isLeaf,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>