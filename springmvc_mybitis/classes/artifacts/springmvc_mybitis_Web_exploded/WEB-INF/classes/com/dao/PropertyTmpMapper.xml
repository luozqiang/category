<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.PropertyTmpMapper" >
  <resultMap id="BaseResultMap" type="com.model.PropertyTmp" >
    <id column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="property" property="property" jdbcType="VARCHAR" />
    <result column="property_value" property="propertyValue" jdbcType="VARCHAR" />
    <result column="property_type" property="propertyType" jdbcType="INTEGER" />
    <result column="input_type" property="inputType" jdbcType="INTEGER" />
    <result column="is_require" property="isRequire" jdbcType="INTEGER" />
    <result column="property_id" property="propertyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    source_id, property, property_value, property_type, input_type, is_require, property_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from property_tmp
    where source_id = #{sourceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from property_tmp
    where source_id = #{sourceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.PropertyTmp" >
    insert into property_tmp (source_id, property, property_value, 
      property_type, input_type, is_require, 
      property_id)
    values (#{sourceId,jdbcType=INTEGER}, #{property,jdbcType=VARCHAR}, #{propertyValue,jdbcType=VARCHAR}, 
      #{propertyType,jdbcType=INTEGER}, #{inputType,jdbcType=INTEGER}, #{isRequire,jdbcType=INTEGER}, 
      #{propertyId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.model.PropertyTmp" >
    insert into property_tmp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="property != null" >
        property,
      </if>
      <if test="propertyValue != null" >
        property_value,
      </if>
      <if test="propertyType != null" >
        property_type,
      </if>
      <if test="inputType != null" >
        input_type,
      </if>
      <if test="isRequire != null" >
        is_require,
      </if>
      <if test="propertyId != null" >
        property_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="property != null" >
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="propertyValue != null" >
        #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="propertyType != null" >
        #{propertyType,jdbcType=INTEGER},
      </if>
      <if test="inputType != null" >
        #{inputType,jdbcType=INTEGER},
      </if>
      <if test="isRequire != null" >
        #{isRequire,jdbcType=INTEGER},
      </if>
      <if test="propertyId != null" >
        #{propertyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.PropertyTmp" >
    update property_tmp
    <set >
      <if test="property != null" >
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="propertyValue != null" >
        property_value = #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="propertyType != null" >
        property_type = #{propertyType,jdbcType=INTEGER},
      </if>
      <if test="inputType != null" >
        input_type = #{inputType,jdbcType=INTEGER},
      </if>
      <if test="isRequire != null" >
        is_require = #{isRequire,jdbcType=INTEGER},
      </if>
      <if test="propertyId != null" >
        property_id = #{propertyId,jdbcType=INTEGER},
      </if>
    </set>
    where source_id = #{sourceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.PropertyTmp" >
    update property_tmp
    set property = #{property,jdbcType=VARCHAR},
      property_value = #{propertyValue,jdbcType=VARCHAR},
      property_type = #{propertyType,jdbcType=INTEGER},
      input_type = #{inputType,jdbcType=INTEGER},
      is_require = #{isRequire,jdbcType=INTEGER},
      property_id = #{propertyId,jdbcType=INTEGER}
    where source_id = #{sourceId,jdbcType=INTEGER}
  </update>
</mapper>