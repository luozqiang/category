<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.CategoryPropertyNameMapper" >
  <resultMap id="BaseResultMap" type="com.model.CategoryPropertyName" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="property_name_id" property="propertyNameId" jdbcType="INTEGER" />
    <result column="is_required" property="isRequired" jdbcType="TINYINT" />
    <result column="input_type" property="inputType" jdbcType="TINYINT" />
    <result column="property_type" property="propertyType" jdbcType="TINYINT" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, category_id, property_name_id, is_required, input_type, property_type, sort_order, 
    create_time, update_time
  </sql>
  <select id="selectByUniqueKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from category_property_name
    where category_id = #{category_id,jdbcType=INTEGER} and property_name_id = #{property_name_id,jdbcType=INTEGER}
  </select>

  <select id="selectMaxOrderByCategory" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    SELECT IFNULL(max(`sort_order`),0) AS max_order from category_property_name
    where category_id = #{category_id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from category_property_name
    where id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from category_property_name
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.CategoryPropertyName" >
    insert into category_property_name (id, category_id, property_name_id, 
      is_required, input_type, property_type, 
      sort_order, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{propertyNameId,jdbcType=INTEGER}, 
      #{isRequired,jdbcType=TINYINT}, #{inputType,jdbcType=TINYINT}, #{propertyType,jdbcType=TINYINT}, 
      #{sortOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.CategoryPropertyName"  keyProperty="id" useGeneratedKeys="true" >
    insert into category_property_name
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="propertyNameId != null" >
        property_name_id,
      </if>
      <if test="isRequired != null" >
        is_required,
      </if>
      <if test="inputType != null" >
        input_type,
      </if>
      <if test="propertyType != null" >
        property_type,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="propertyNameId != null" >
        #{propertyNameId,jdbcType=INTEGER},
      </if>
      <if test="isRequired != null" >
        #{isRequired,jdbcType=TINYINT},
      </if>
      <if test="inputType != null" >
        #{inputType,jdbcType=TINYINT},
      </if>
      <if test="propertyType != null" >
        #{propertyType,jdbcType=TINYINT},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.CategoryPropertyName" >
    update category_property_name
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="propertyNameId != null" >
        property_name_id = #{propertyNameId,jdbcType=INTEGER},
      </if>
      <if test="isRequired != null" >
        is_required = #{isRequired,jdbcType=TINYINT},
      </if>
      <if test="inputType != null" >
        input_type = #{inputType,jdbcType=TINYINT},
      </if>
      <if test="propertyType != null" >
        property_type = #{propertyType,jdbcType=TINYINT},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.CategoryPropertyName" >
    update category_property_name
    set category_id = #{categoryId,jdbcType=INTEGER},
      property_name_id = #{propertyNameId,jdbcType=INTEGER},
      is_required = #{isRequired,jdbcType=TINYINT},
      input_type = #{inputType,jdbcType=TINYINT},
      property_type = #{propertyType,jdbcType=TINYINT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>